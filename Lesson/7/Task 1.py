'''
    Реализовать класс Matrix (матрица). 
    Обеспечить перегрузку конструктора класса (метод __init__()), 
    который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, 
расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции 
сложения двух объектов класса Matrix (двух матриц). 
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент 
первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
'''

class Matrix:
    def __init__(self, m1, m2):
        self.m1 = m1
        self.m2 = m2
        self.m = []

    def __add__(self):
        if len(self.m1) == len(self.m2) and len(self.m1) > 0:
            if len(self.m1[0]) == len(self.m2[0]):
                self.m = [[0 for i in range(len(self.m1[0]))] for el in range(len(self.m1))]
                for i in range(len(self.m1)):
                    for j in range(len(self.m1[0])):
                        self.m[i][j]=self.m1[i][j] + self.m2[i][j]
                return self.m
            else:
                print('Размерность матриц разные')
                return None
    
    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.m]))

cm = Matrix([[5, 32, 21],
                    [6, 17, 23],
                    [41, 50, 9]],
                   [[45, 18, 29],
                    [44, 33, 27],
                    [9, 0, 41]])  # [[50, 50, 50], [50, 50, 50], [50, 50, 50]]
print(cm.__add__())
print(cm.__str__())



